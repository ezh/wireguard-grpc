syntax = "proto3";

package wireguard.v1;

import "google/protobuf/empty.proto";

import "wireguard/v1/annotations.proto";

// Wireguard interface configuration
// See: https://pkg.go.dev/golang.zx2c4.com/wireguard/wgctrl/wgtypes#Config
message InterfaceConfig {
  // The name of the wireguard interface to which this peer belongs
  string wg_if_name = 1;
  bytes public_key = 2;
  uint32 listen_port = 3;
  uint32 firewall_mark = 4;
  repeated PeerConfig peers = 5;
}

// Wireguard peer configuration
// See: https://pkg.go.dev/golang.zx2c4.com/wireguard/wgctrl/wgtypes#PeerConfig
message PeerConfig {
  // Public-key base64
  bytes public_key = 1;
  // Preshared-key base64
  bytes preshared_key = 2;
  // Peer IP
  string endpoint_ip = 3 [ (wireguard_options).type = TYPE_IP ];
  // Peer UDP port
  uint32 endpont_port = 4
      [ (wireguard_options).int_range = {minimum : 0 maximum : 65535} ];
  // Keepalive interval (sec)
  uint32 persistent_keepalive = 5;
  int64 last_handshake_time = 6;
  int64 receive_bytes = 7;
  int64 transmit_bytes = 8;
  // Allowed IPs
  repeated string allowed_ips = 9 [ (wireguard_options).type = TYPE_IP ];
  // Flags
  // WIREGUARD_PEER_STATUS_DEAD = 0x1
  uint32 flags = 10;
}

message DumpRequest { repeated string wg_if_names = 1; }

message DumpResponse { repeated InterfaceConfig interfaces = 1; }

service WireGuardService {
  rpc Ping(google.protobuf.Empty) returns (google.protobuf.Empty);
  rpc Dump(DumpRequest) returns (DumpResponse);
}
